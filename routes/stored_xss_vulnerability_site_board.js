
const express = require('express');
const sqlite3 = require('sqlite3');
const path = require('path');

const router = express.Router();
const dbPath = path.join(__dirname, '..', 'vulnerability_site.db');

router.use(express.urlencoded({ extended: true }));

router.get('/', (req, res) => {
    const db = new sqlite3.Database(dbPath);
    db.all("SELECT id, title FROM board", (err, rows) => {
        res.render('stored_xss_vulnerability_site_board_list', { posts: rows });
        db.close();
    });
});

router.get('/write', (req, res) => {
    res.render('stored_xss_vulnerability_site_board_write');
});

router.post('/write', (req, res) => {
    const title = req.body.title;
    const content = req.body.content;
    const db = new sqlite3.Database(dbPath);
    db.run("INSERT INTO board (title, content) VALUES (?, ?)", [title, content], function(err) {
        res.redirect('/stored_xss/board/' + this.lastID);
        db.close();
    });
});

router.get('/:id', (req, res) => {
    const postId = req.params.id;
    const db = new sqlite3.Database(dbPath);
    db.get("SELECT title, content FROM board WHERE id = ?", [postId], (err, row) => {
        if (row) {
            res.render('stored_xss_vulnerability_site_board_post', { post: row });
        } else {
            res.status(404).send('Post not found');
        }
        db.close();
    });
});

module.exports = router;
